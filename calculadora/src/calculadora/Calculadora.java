/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package calculadora;

/**
 *
 * @author ChptrDesktop
 */
public class Calculadora extends javax.swing.JFrame {

    /**
     * Creates new form Calculadora
     */
    public Calculadora() {
        initComponents();
    }
    
    String operadorString1 = "";
    int operadorEntero1 = 0;
    double operadorDoble1 = 0.0;
    boolean operadorDobleUso1 = false; // false cuando se está trabajando con un entero y true con un double
    boolean operadorUso1 = false;  // indica el uso del operador false se está utilizando y true de lo contrario
    boolean punto1 = false;
    
    String operadorString2 = "";
    int operadorEntero2 = 0;
    double operadorDoble2 = 0.0;
    boolean operadorUso2 = false;
    boolean operadorDobleUso2 = false;
    boolean punto2 = false;
    
    String resultado =  "";
    int resultadoInt = 0;
    double resultadoDouble = 0.0;
    boolean resultadoUso = false;
    
    boolean suma = false;
    boolean resta = false;
    boolean multiplicacion = false;
    boolean division = false;
    boolean signo = false;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        potenciaGenericaB1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        num1 = new javax.swing.JButton();
        num2 = new javax.swing.JButton();
        num3 = new javax.swing.JButton();
        num4 = new javax.swing.JButton();
        num5 = new javax.swing.JButton();
        num6 = new javax.swing.JButton();
        num7 = new javax.swing.JButton();
        num8 = new javax.swing.JButton();
        num9 = new javax.swing.JButton();
        num0 = new javax.swing.JButton();
        puntoDecimal = new javax.swing.JButton();
        salir = new javax.swing.JButton();
        botonCE = new javax.swing.JButton();
        botonC = new javax.swing.JButton();
        botonEliminar = new javax.swing.JButton();
        cambioSignoB = new javax.swing.JButton();
        divisionB = new javax.swing.JButton();
        multiplicacionB = new javax.swing.JButton();
        restaB = new javax.swing.JButton();
        sumaB = new javax.swing.JButton();
        igualB = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        potenciaGenericaB = new javax.swing.JButton();
        potenciaCuadradaB = new javax.swing.JButton();
        potenciaCubicaB = new javax.swing.JButton();
        absolutoB = new javax.swing.JButton();
        redondeoB = new javax.swing.JButton();
        raizCuadradaB = new javax.swing.JButton();
        raizCubicaB = new javax.swing.JButton();
        raizCubicaB1 = new javax.swing.JButton();
        piB = new javax.swing.JButton();
        eB = new javax.swing.JButton();
        sinB = new javax.swing.JButton();
        cosB = new javax.swing.JButton();
        tanB = new javax.swing.JButton();
        arcSinB = new javax.swing.JButton();
        arcCosB = new javax.swing.JButton();
        arcTanB = new javax.swing.JButton();
        logaritmoNaturalB = new javax.swing.JButton();
        logaritmoBase10B = new javax.swing.JButton();
        blank = new javax.swing.JButton();
        factorialB = new javax.swing.JButton();
        entradaActual = new javax.swing.JLabel();
        operacionLabel = new javax.swing.JLabel();

        potenciaGenericaB1.setText("x^y");
        potenciaGenericaB1.setMargin(new java.awt.Insets(1, 1, 1, 1));

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calculadora");
        setBackground(new java.awt.Color(204, 204, 204));
        setBounds(new java.awt.Rectangle(325, 150, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        num1.setText("1");
        num1.setMargin(new java.awt.Insets(1, 1, 1, 1));
        num1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                num1ActionPerformed(evt);
            }
        });

        num2.setText("2");
        num2.setMargin(new java.awt.Insets(1, 1, 1, 1));
        num2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                num2ActionPerformed(evt);
            }
        });

        num3.setText("3");
        num3.setMargin(new java.awt.Insets(1, 1, 1, 1));
        num3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                num3ActionPerformed(evt);
            }
        });

        num4.setText("4");
        num4.setMargin(new java.awt.Insets(1, 1, 1, 1));
        num4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                num4ActionPerformed(evt);
            }
        });

        num5.setText("5");
        num5.setMargin(new java.awt.Insets(1, 1, 1, 1));
        num5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                num5ActionPerformed(evt);
            }
        });

        num6.setText("6");
        num6.setMargin(new java.awt.Insets(1, 1, 1, 1));
        num6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                num6ActionPerformed(evt);
            }
        });

        num7.setText("7");
        num7.setMargin(new java.awt.Insets(1, 1, 1, 1));
        num7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                num7ActionPerformed(evt);
            }
        });

        num8.setText("8");
        num8.setMargin(new java.awt.Insets(1, 1, 1, 1));
        num8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                num8ActionPerformed(evt);
            }
        });

        num9.setText("9");
        num9.setMargin(new java.awt.Insets(1, 1, 1, 1));
        num9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                num9ActionPerformed(evt);
            }
        });

        num0.setText("0");
        num0.setMargin(new java.awt.Insets(1, 1, 1, 1));
        num0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                num0ActionPerformed(evt);
            }
        });

        puntoDecimal.setText(".");
        puntoDecimal.setMargin(new java.awt.Insets(1, 1, 1, 1));
        puntoDecimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                puntoDecimalActionPerformed(evt);
            }
        });

        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });

        botonCE.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        botonCE.setText("CE");
        botonCE.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        botonCE.setMargin(new java.awt.Insets(0, 0, 0, 0));
        botonCE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCEActionPerformed(evt);
            }
        });

        botonC.setText("C");
        botonC.setMargin(new java.awt.Insets(1, 1, 1, 1));
        botonC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCActionPerformed(evt);
            }
        });

        botonEliminar.setFont(new java.awt.Font("Times New Roman", 0, 10)); // NOI18N
        botonEliminar.setText("←");
        botonEliminar.setMargin(new java.awt.Insets(0, 0, 0, 0));

        cambioSignoB.setText("±");
        cambioSignoB.setMargin(new java.awt.Insets(1, 1, 1, 1));

        divisionB.setText("/");
        divisionB.setMargin(new java.awt.Insets(1, 1, 1, 1));
        divisionB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divisionBActionPerformed(evt);
            }
        });

        multiplicacionB.setText("*");
        multiplicacionB.setMargin(new java.awt.Insets(1, 1, 1, 1));
        multiplicacionB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplicacionBActionPerformed(evt);
            }
        });

        restaB.setText("-");
        restaB.setMargin(new java.awt.Insets(1, 1, 1, 1));
        restaB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restaBActionPerformed(evt);
            }
        });

        sumaB.setText("+");
        sumaB.setMargin(new java.awt.Insets(1, 1, 1, 1));
        sumaB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sumaBActionPerformed(evt);
            }
        });

        igualB.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        igualB.setText("=");
        igualB.setMargin(new java.awt.Insets(1, 1, 1, 1));
        igualB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                igualBActionPerformed(evt);
            }
        });

        potenciaGenericaB.setText("x^y");
        potenciaGenericaB.setMargin(new java.awt.Insets(1, 1, 1, 1));

        potenciaCuadradaB.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        potenciaCuadradaB.setText("x²");
        potenciaCuadradaB.setMargin(new java.awt.Insets(1, 1, 1, 1));

        potenciaCubicaB.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        potenciaCubicaB.setText("x³");
        potenciaCubicaB.setMargin(new java.awt.Insets(1, 1, 1, 1));

        absolutoB.setText("|x|");
        absolutoB.setMargin(new java.awt.Insets(1, 1, 1, 1));

        redondeoB.setText("Red");
        redondeoB.setMargin(new java.awt.Insets(1, 1, 1, 1));

        raizCuadradaB.setText("√x");
        raizCuadradaB.setMargin(new java.awt.Insets(1, 1, 1, 1));

        raizCubicaB.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        raizCubicaB.setText("x^1/3");
        raizCubicaB.setMargin(new java.awt.Insets(1, 1, 1, 1));

        raizCubicaB1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        raizCubicaB1.setText("x^1/y");
        raizCubicaB1.setMargin(new java.awt.Insets(1, 1, 1, 1));

        piB.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        piB.setText("π");
        piB.setMargin(new java.awt.Insets(1, 1, 1, 1));

        eB.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        eB.setText("℮");
        eB.setMargin(new java.awt.Insets(1, 1, 1, 1));

        sinB.setText("sin");
        sinB.setMargin(new java.awt.Insets(1, 1, 1, 1));

        cosB.setText("cos");
        cosB.setMargin(new java.awt.Insets(1, 1, 1, 1));

        tanB.setText("tan");
        tanB.setMargin(new java.awt.Insets(1, 1, 1, 1));

        arcSinB.setText("asin");
        arcSinB.setMargin(new java.awt.Insets(1, 1, 1, 1));

        arcCosB.setText("acos");
        arcCosB.setMargin(new java.awt.Insets(1, 1, 1, 1));

        arcTanB.setText("atan");
        arcTanB.setMargin(new java.awt.Insets(1, 1, 1, 1));

        logaritmoNaturalB.setText("ln");
        logaritmoNaturalB.setMargin(new java.awt.Insets(1, 1, 1, 1));

        logaritmoBase10B.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        logaritmoBase10B.setText("log10");
        logaritmoBase10B.setMargin(new java.awt.Insets(1, 1, 1, 1));

        blank.setEnabled(false);
        blank.setFocusPainted(false);
        blank.setMargin(new java.awt.Insets(1, 1, 1, 1));

        factorialB.setText("F!");
        factorialB.setMargin(new java.awt.Insets(1, 1, 1, 1));

        entradaActual.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        entradaActual.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        entradaActual.setText("0");
        entradaActual.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        operacionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        operacionLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(botonCE, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(botonC, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(cambioSignoB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(potenciaGenericaB, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(raizCuadradaB, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(sinB, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(arcSinB, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(num7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(num8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(num9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(divisionB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(num4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(num5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(num6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(multiplicacionB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(num1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(num2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(num3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(restaB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(num0, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(puntoDecimal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(11, 11, 11)
                                        .addComponent(sumaB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(igualB, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(46, 46, 46)
                                        .addComponent(potenciaCuadradaB, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(raizCubicaB, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(cosB, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(arcCosB, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(46, 46, 46)
                                        .addComponent(potenciaCubicaB, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(raizCubicaB1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(tanB, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(arcTanB, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(46, 46, 46)
                                        .addComponent(absolutoB, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(piB, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(logaritmoNaturalB, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(factorialB, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(46, 46, 46)
                                        .addComponent(redondeoB, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(eB, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(logaritmoBase10B, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(blank, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(148, 148, 148)
                                        .addComponent(salir, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(operacionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(entradaActual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(entradaActual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(operacionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cambioSignoB, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(potenciaGenericaB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(raizCuadradaB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sinB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arcSinB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonCE, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonC, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(potenciaCuadradaB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(raizCubicaB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cosB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(arcCosB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(potenciaCubicaB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(raizCubicaB1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tanB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(arcTanB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(absolutoB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(piB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(logaritmoNaturalB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(factorialB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(redondeoB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(logaritmoBase10B, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(blank, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addComponent(salir, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(num7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(num8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(num9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(divisionB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(num4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(num5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(num6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(multiplicacionB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(num1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(num2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(num3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(restaB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(num0, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(puntoDecimal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sumaB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addComponent(igualB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_salirActionPerformed

    private void num1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_num1ActionPerformed
        if (operadorUso1 == false){ // si es falso es porque apenas se está ingresando el primer operando
            operadorString1 += "1";
            entradaActual.setText(operadorString1);
            if (operadorDobleUso1 == false){
                operadorEntero1 = (operadorEntero1*10)+1;
                System.out.println("Valor actualizado"+operadorEntero1);
            }else{
                operadorDoble1 = (operadorDoble1)+0.1;
                System.out.println("Valor actualizado"+operadorDoble1);
            }
        }else if (operadorUso2 == false){ // cuando se está ingresando el segundo operando
            operadorString2 += "1";
            entradaActual.setText(operadorString2);
            if (operadorDobleUso2 == false){
                operadorEntero2 = (operadorEntero2*10)+1;
                System.out.println("Valor actualizado"+operadorEntero2);
            }else{
                operadorDoble2 = (operadorDoble2)+0.1;
                System.out.println("Valor actualizado"+operadorDoble2);
            }
        }else{}
    }//GEN-LAST:event_num1ActionPerformed

    private void num2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_num2ActionPerformed
        if (operadorUso1 == false){ // si es falso es porque apenas se está ingresando el primer operando
            operadorString1 += "2";
            entradaActual.setText(operadorString1);
            if (operadorDobleUso1 == false){
                operadorEntero1 = (operadorEntero1*10)+2;
            }else{
                operadorDoble1 = (operadorDoble1)+0.2;
            }
        }else if (operadorUso2 == false){ // cuando se está ingresando el segundo operando
            operadorString2 += "2";
            entradaActual.setText(operadorString2);
            if (operadorDobleUso2 == false){
                operadorEntero2 = (operadorEntero2*10)+2;
            }else{
                operadorDoble2 = (operadorDoble2)+0.2;
            }
        }else{}
    }//GEN-LAST:event_num2ActionPerformed

    private void num3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_num3ActionPerformed
        if (operadorUso1 == false){ // si es falso es porque apenas se está ingresando el primer operando
            operadorString1 += "3";
            entradaActual.setText(operadorString1);
            if (operadorDobleUso1 == false){
                operadorEntero1 = (operadorEntero1*10)+3;
            }else{
                operadorDoble1 = (operadorDoble1)+0.3;
            }
        }else if (operadorUso2 == false){ // cuando se está ingresando el segundo operando
            operadorString2 += "3";
            entradaActual.setText(operadorString2);
            if (operadorDobleUso2 == false){
                operadorEntero2 = (operadorEntero2*10)+3;
            }else{
                operadorDoble2 = (operadorDoble2)+0.3;
            }
        }else{}
    }//GEN-LAST:event_num3ActionPerformed

    private void num4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_num4ActionPerformed
        if (operadorUso1 == false){ // si es falso es porque apenas se está ingresando el primer operando
            operadorString1 += "4";
            entradaActual.setText(operadorString1);
            if (operadorDobleUso1 == false){
                operadorEntero1 = (operadorEntero1*10)+4;
            }else{
                operadorDoble1 = (operadorDoble1)+0.4;
            }
        }else if (operadorUso2 == false){ // cuando se está ingresando el segundo operando
            operadorString2 += "4";
            entradaActual.setText(operadorString2);
            if (operadorDobleUso2 == false){
                operadorEntero2 = (operadorEntero2*10)+4;
            }else{
                operadorDoble2 = (operadorDoble2)+0.4;
            }
        }else{}
    }//GEN-LAST:event_num4ActionPerformed

    private void num5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_num5ActionPerformed
        if (operadorUso1 == false){ // si es falso es porque apenas se está ingresando el primer operando
            operadorString1 += "5";
            entradaActual.setText(operadorString1);
            if (operadorDobleUso1 == false){
                operadorEntero1 = (operadorEntero1*10)+5;
            }else{
                operadorDoble1 = (operadorDoble1)+0.5;
            }
        }else if (operadorUso2 == false){ // cuando se está ingresando el segundo operando
            operadorString2 += "5";
            entradaActual.setText(operadorString2);
            if (operadorDobleUso2 == false){
                operadorEntero2 = (operadorEntero2*10)+5;
            }else{
                operadorDoble2 = (operadorDoble2)+0.5;
            }
        }else{}
    }//GEN-LAST:event_num5ActionPerformed

    private void num6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_num6ActionPerformed
        if (operadorUso1 == false){ // si es falso es porque apenas se está ingresando el primer operando
            operadorString1 += "6";
            entradaActual.setText(operadorString1);
            if (operadorDobleUso1 == false){
                operadorEntero1 = (operadorEntero1*10)+6;
            }else{
                operadorDoble1 = (operadorDoble1)+0.6;
            }
        }else if (operadorUso2 == false){ // cuando se está ingresando el segundo operando
            operadorString2 += "6";
            entradaActual.setText(operadorString2);
            if (operadorDobleUso2 == false){
                operadorEntero2 = (operadorEntero2*10)+6;
            }else{
                operadorDoble2 = (operadorDoble2)+0.6;
            }
        }else{}
    }//GEN-LAST:event_num6ActionPerformed

    private void num7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_num7ActionPerformed
        if (operadorUso1 == false){ // si es falso es porque apenas se está ingresando el primer operando
            operadorString1 += "7";
            entradaActual.setText(operadorString1);
            if (operadorDobleUso1 == false){
                operadorEntero1 = (operadorEntero1*10)+7;
            }else{
                operadorDoble1 = (operadorDoble1)+0.7;
            }
        }else if (operadorUso2 == false){ // cuando se está ingresando el segundo operando
            operadorString2 += "7";
            entradaActual.setText(operadorString2);
            if (operadorDobleUso2 == false){
                operadorEntero2 = (operadorEntero2*10)+7;
            }else{
                operadorDoble2 = (operadorDoble2)+0.7;
            }
        }else{}
    }//GEN-LAST:event_num7ActionPerformed

    private void num8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_num8ActionPerformed
        if (operadorUso1 == false){ // si es falso es porque apenas se está ingresando el primer operando
            operadorString1 += "8";
            entradaActual.setText(operadorString1);
            if (operadorDobleUso1 == false){
                operadorEntero1 = (operadorEntero1*10)+8;
            }else{
                operadorDoble1 = (operadorDoble1)+0.8;
            }
        }else if (operadorUso2 == false){ // cuando se está ingresando el segundo operando
            operadorString2 += "8";
            entradaActual.setText(operadorString2);
            if (operadorDobleUso2 == false){
                operadorEntero2 = (operadorEntero2*10)+8;
            }else{
                operadorDoble2 = (operadorDoble2)+0.8;
            }
        }else{}
    }//GEN-LAST:event_num8ActionPerformed

    private void num0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_num0ActionPerformed
        if (operadorUso1 == false){ // si es falso es porque apenas se está ingresando el primer operando
            if (!operadorString1.equals("")){
                operadorString1 += "0";
                entradaActual.setText(operadorString1);
                if (operadorDobleUso1 == false){
                    operadorEntero1 = (operadorEntero1*10)+0;
                }else{
                    operadorDoble1 = (operadorDoble1)+0;
                }
            
            }else{
                entradaActual.setText("0");
                if (operadorDobleUso1 == false){
                    operadorEntero1 = 0;
                }else{
                    operadorDoble1 = 0;
                }
            }
        }else if (operadorUso2 == false){ // cuando se está ingresando el segundo operando
            if (!operadorString2.equals("")){
                operadorString2 += "0";
                entradaActual.setText(operadorString2);
                if (operadorDobleUso2 == false){
                    operadorEntero2 = (operadorEntero2*10)+0;
                }else{
                    operadorDoble2 = (operadorDoble2)+0;
                }
            
            }else{
                entradaActual.setText("0");
                if (operadorDobleUso2 == false){
                    operadorEntero2 = 0;
                }else{
                    operadorDoble2 = 0;
                }
            }
        }else{}
    }//GEN-LAST:event_num0ActionPerformed

    private void num9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_num9ActionPerformed
        if (operadorUso1 == false){ // si es falso es porque apenas se está ingresando el primer operando
            operadorString1 += "9";
            entradaActual.setText(operadorString1);
            if (operadorDobleUso1 == false){
                operadorEntero1 = (operadorEntero1*10)+9;
            }else{
                operadorDoble1 = (operadorDoble1)+0.9;
            }
        }else if (operadorUso2 == false){ // cuando se está ingresando el segundo operando
            operadorString2 += "9";
            entradaActual.setText(operadorString2); //boolean punto1 == false;
            if (operadorDobleUso2 == false){
                operadorEntero2 = (operadorEntero2*10)+9;
                System.out.println("Valor actualizado"+operadorEntero2);
            }else{
                operadorDoble2 = (operadorDoble2)+0.9;
                System.out.println("Valor actualizado"+operadorDoble2);
            }
        }else{}
    }//GEN-LAST:event_num9ActionPerformed

    private void puntoDecimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_puntoDecimalActionPerformed
        if (operadorUso1 == false){ // si es falso es porque apenas se está ingresando el primer operando
            if(operadorString1.contains(".")){}else{
                if (operadorString1.equals("")){
                    operadorString1 += "0.";
                }else{
                    operadorString1 += ".";
                }
                entradaActual.setText(operadorString1);
                operadorDoble1 = (double)operadorEntero1;
                operadorDoble2 = (double)operadorEntero2;
                operadorDobleUso1 = true;
                operadorDobleUso2 = true;
            }
        }else if (operadorUso2 == false){ // cuando se está ingresando el segundo operando
            if(operadorString2.contains(".")){}else{
                if (operadorString2.equals("")){
                    operadorString2 += "0.";
                }else{
                    operadorString2 += ".";
                }
                entradaActual.setText(operadorString2);
                System.out.println("this shit is: " + operadorEntero2);
                if (operadorDobleUso1 == false){
                    operadorDoble1 = (double)operadorEntero1;
                    operadorDoble2 = (double)operadorEntero2;
                }else{
                    operadorDoble2 = (double)operadorEntero2;
                }
                System.out.println("now this shit is: " + operadorDoble2);
                /*operadorDobleUso1 = true;*/
                operadorDobleUso2 = true;
            }
        }else{}
    }//GEN-LAST:event_puntoDecimalActionPerformed

    private void botonCEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCEActionPerformed
        if (operadorUso1 == false){ // se está editando
            operadorString1 = "";
            operadorEntero1 = 0;
            operadorDoble1 = 0.0;
        }else if (operadorUso2 == false){ // segunda opción se edición para el segundo operando
            operadorString2 = "";
            operadorEntero2 = 0;
            operadorDoble2 = 0.0;
        }else{}
        if (resultadoUso){
        }else{
            entradaActual.setText("0");
        }
    }//GEN-LAST:event_botonCEActionPerformed

    private void botonCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCActionPerformed
        operadorString1 = "";
        operadorEntero1 = 0;
        operadorDoble1 = 0.0;
        operadorDobleUso1 = false;
        operadorUso1 = false;
        punto1 = false;
        
        operadorString2 = "";
        operadorEntero2 = 0;
        operadorDoble2 = 0.0;
        operadorUso2 = false;
        operadorDobleUso2 = false;
        punto2 = false;

        resultado =  "";
        resultadoInt = 0;
        resultadoDouble = 0.0;
        resultadoUso = false;
        suma = false;
        resta = false;
        multiplicacion = false;
        division = false;
        signo = false;
        
        operacionLabel.setText("");
        entradaActual.setText("0");
    }//GEN-LAST:event_botonCActionPerformed

    private void sumaBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sumaBActionPerformed
        operadorUso1 = true;
        suma = true;
        operacionLabel.setText("+");
    }//GEN-LAST:event_sumaBActionPerformed

    private void igualBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_igualBActionPerformed
        metodos operacion = new metodos();
        if(suma){
            if (operadorDobleUso1 == false && operadorDobleUso2 == false){ // enteros AMBOS
                resultadoInt = operacion.sumaEntero(operadorEntero1,operadorEntero2);
                resultado = String.valueOf(resultadoInt);
                entradaActual.setText(resultado);
                suma = false;
            }else{
                resultadoDouble = operacion.sumaDouble(operadorDoble1,operadorDoble2);
                resultado = String.valueOf(resultadoDouble);
                entradaActual.setText(resultado);
                suma = false;
            }
            resultadoUso = true;
        }else if (resta){
            if (operadorDobleUso1 == false && operadorDobleUso2 == false){ // enteros AMBOS
                resultadoInt = operacion.restaEntero(operadorEntero1,operadorEntero2);
                resultado = String.valueOf(resultadoInt);
                entradaActual.setText(resultado);
                resta = false;
            }else{
                System.out.println(operadorDoble1 + "   " +operadorDoble2);
                resultadoDouble = operacion.restaDouble(operadorDoble1,operadorDoble2);
                resultado = String.valueOf(resultadoDouble);
                entradaActual.setText(resultado);
                resta = false;
            }
            resultadoUso = true;
        }else if (multiplicacion){
            if (operadorDobleUso1 == false && operadorDobleUso2 == false){ // enteros AMBOS
                System.out.println(operadorEntero1 + "   " +operadorEntero2);
                resultadoInt = operacion.multiEntero(operadorEntero1,operadorEntero2);
                resultado = String.valueOf(resultadoInt);
                entradaActual.setText(resultado);
                multiplicacion = false;
            }else{
                System.out.println(operadorDoble1 + "   " +operadorDoble2);
                resultadoDouble = operacion.multiDouble(operadorDoble1,operadorDoble2);
                resultado = String.valueOf(resultadoDouble);
                entradaActual.setText(resultado);
                multiplicacion = false;
            }
            resultadoUso = true;
        }else if (division){
            if (operadorDobleUso1 == false && operadorDobleUso2 == false){ // enteros AMBOS
                if (operadorEntero1 == 0){
                    resultadoInt = 0;
                    resultado = "";
                    entradaActual.setText("[error]");
                }else{
                    System.out.println(operadorEntero1 + "   " +operadorEntero2);
                    
                    resultadoInt = operacion.divisionEntero(operadorEntero1,operadorEntero2);
                    resultado = String.valueOf(resultadoInt);
                    entradaActual.setText(resultado); 
                }
                division = false;
            }else{
                System.out.println(operadorDoble1 + "   " +operadorDoble2);
                resultadoDouble = operacion.divisionDouble(operadorDoble1,operadorDoble2);
                resultado = String.valueOf(resultadoDouble);
                entradaActual.setText(resultado);
                division = false;
            }
            resultadoUso = true;
        }
        else{}
        operadorString2 = "";
        operadorEntero2 = 0;
        operadorDoble2 = 0.0;
        operadorUso2 = false;
        operadorDobleUso2 = false;
        
        
        operadorEntero1 = resultadoInt;
        operadorDoble1 = resultadoDouble;
    }//GEN-LAST:event_igualBActionPerformed

    private void restaBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restaBActionPerformed
        operadorUso1 = true;
        resta = true;
        operacionLabel.setText("-");
    }//GEN-LAST:event_restaBActionPerformed

    private void multiplicacionBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiplicacionBActionPerformed
        operadorUso1 = true;
        multiplicacion = true;
        operacionLabel.setText("*");
    }//GEN-LAST:event_multiplicacionBActionPerformed

    private void divisionBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divisionBActionPerformed
        operadorUso1 = true;
        division = true;
        operacionLabel.setText("/");
    }//GEN-LAST:event_divisionBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculadora().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton absolutoB;
    private javax.swing.JButton arcCosB;
    private javax.swing.JButton arcSinB;
    private javax.swing.JButton arcTanB;
    private javax.swing.JButton blank;
    private javax.swing.JButton botonC;
    private javax.swing.JButton botonCE;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton cambioSignoB;
    private javax.swing.JButton cosB;
    private javax.swing.JButton divisionB;
    private javax.swing.JButton eB;
    private javax.swing.JLabel entradaActual;
    private javax.swing.JButton factorialB;
    private javax.swing.JButton igualB;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton logaritmoBase10B;
    private javax.swing.JButton logaritmoNaturalB;
    private javax.swing.JButton multiplicacionB;
    private javax.swing.JButton num0;
    private javax.swing.JButton num1;
    private javax.swing.JButton num2;
    private javax.swing.JButton num3;
    private javax.swing.JButton num4;
    private javax.swing.JButton num5;
    private javax.swing.JButton num6;
    private javax.swing.JButton num7;
    private javax.swing.JButton num8;
    private javax.swing.JButton num9;
    private javax.swing.JLabel operacionLabel;
    private javax.swing.JButton piB;
    private javax.swing.JButton potenciaCuadradaB;
    private javax.swing.JButton potenciaCubicaB;
    private javax.swing.JButton potenciaGenericaB;
    private javax.swing.JButton potenciaGenericaB1;
    private javax.swing.JButton puntoDecimal;
    private javax.swing.JButton raizCuadradaB;
    private javax.swing.JButton raizCubicaB;
    private javax.swing.JButton raizCubicaB1;
    private javax.swing.JButton redondeoB;
    private javax.swing.JButton restaB;
    private javax.swing.JButton salir;
    private javax.swing.JButton sinB;
    private javax.swing.JButton sumaB;
    private javax.swing.JButton tanB;
    // End of variables declaration//GEN-END:variables
}
